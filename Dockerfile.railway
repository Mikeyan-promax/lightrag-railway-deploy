# Railway部署专用Dockerfile - 基于LightRAG项目优化
# 多阶段构建，优化镜像大小和构建速度

# Build stage - 构建阶段
FROM python:3.11-slim AS builder

WORKDIR /app

# 安装构建依赖和Rust环境（某些Python包需要）
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    pkg-config \
    git \
    && rm -rf /var/lib/apt/lists/* \
    && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
    && . $HOME/.cargo/env

# 复制项目核心文件
COPY pyproject.toml .
COPY setup.py .
COPY lightrag/ ./lightrag/

# 设置Rust环境变量
ENV PATH="/root/.cargo/bin:${PATH}"

# 安装Python依赖 - 按照pyproject.toml配置
RUN pip install --user --no-cache-dir .
RUN pip install --user --no-cache-dir .[api]

# 安装PostgreSQL支持（Railway部署需要）
RUN pip install --user --no-cache-dir psycopg2-binary asyncpg

# 安装额外的存储和LLM依赖
RUN pip install --user --no-cache-dir nano-vectordb networkx
RUN pip install --user --no-cache-dir openai ollama tiktoken
RUN pip install --user --no-cache-dir pypdf2 python-docx python-pptx openpyxl

# 安装生产环境依赖
RUN pip install --user --no-cache-dir gunicorn

# Final stage - 运行阶段
FROM python:3.11-slim

WORKDIR /app

# 安装运行时必需的系统依赖
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 从构建阶段复制已安装的Python包
COPY --from=builder /root/.local /root/.local

# 复制项目源代码
COPY ./lightrag ./lightrag
COPY setup.py .
COPY pyproject.toml .

# Railway部署专用：将.env.railway复制为.env文件
# 这样LightRAG就能正确加载Railway环境变量配置
RUN if [ -f ".env.railway" ]; then \
        echo "发现.env.railway文件，复制为.env"; \
        cp .env.railway .env; \
    else \
        echo "警告：未找到.env.railway文件"; \
    fi

# 重新安装项目（确保入口点正确配置）
RUN pip install ".[api]"

# 设置环境变量
ENV PATH=/root/.local/bin:$PATH
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Railway特定的环境变量
ENV WORKING_DIR=/app/rag_storage
ENV INPUT_DIR=/app/inputs

# 创建必要的目录
RUN mkdir -p /app/rag_storage /app/inputs /app/logs

# 创建非root用户（提高安全性）
RUN useradd --create-home --shell /bin/bash lightrag && \
    chown -R lightrag:lightrag /app
USER lightrag

# 健康检查 - Railway会使用这个来检测服务状态
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-9621}/health || exit 1

# Railway会自动分配端口，使用PORT环境变量
EXPOSE ${PORT:-9621}

# 启动命令 - 使用我们的启动脚本确保环境变量正确设置
# Railway会自动设置PORT环境变量
CMD ["python", "start.py"]